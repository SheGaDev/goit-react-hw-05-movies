{"version":3,"file":"static/js/322.b0d79947.chunk.js","mappings":"uQA8CA,EAzCc,SAAHA,GAAyC,IAADC,EAAAC,EAGzBC,EAHTC,EAAKJ,EAALI,MACTC,GAAWC,EAAAA,EAAAA,QAAgC,QAA1BL,EAAoB,QAApBC,GAACK,EAAAA,EAAAA,MAAcC,aAAK,IAAAN,OAAA,EAAnBA,EAAqBO,YAAI,IAAAR,EAAAA,EAAI,4BAMrD,OACES,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIV,EAASW,QAAQJ,UACzBF,EAAAA,EAAAA,MAAA,UAAQO,UAAU,sKAAqKL,SAAA,EACrLC,EAAAA,EAAAA,KAACK,EAAAA,IAAW,CAACD,UAAU,uBACvBJ,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBAGPF,EAAAA,EAAAA,MAAA,OAAKO,UAAU,kBAAiBL,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEM,KAdgBhB,EAcIC,EAAMgB,YAbhCjB,EAAM,gDAAAkB,OAC8ClB,GAChD,+EAYEmB,IAAKlB,EAAMmB,eACXC,MAAO,IACPC,OAAQ,OAEVf,EAAAA,EAAAA,MAAA,OAAKO,UAAU,sBAAqBL,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAGI,UAAU,cAAaL,SAAER,EAAMsB,WAEpChB,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,eAAae,KAAKC,MAA2B,GAArBxB,EAAMyB,cAAmB,QACvDhB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAELC,EAAAA,EAAAA,KAAA,QAAAD,SAAOR,EAAM0B,YACbjB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAELC,EAAAA,EAAAA,KAAA,QAAAD,SAAOR,EAAM2B,OAAOC,KAAI,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAEC,KAAK,gBAK9D,E,SCDA,EApCkB,WAChB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAAeC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5ClC,EAAKoC,EAAA,GAAEE,EAAQF,EAAA,GAatB,OAXAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAA5C,GAAA6C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACIC,EAAAA,EAAAA,GAAM,CACzBC,KAAM,UACNC,SAAUpB,IACT,KAAD,EAHIa,EAAME,EAAAM,KAIZf,EAASO,GAAqB,wBAAAE,EAAAO,OAAA,GAAAV,EAAA,KAC/B,kBANe,OAAAhD,EAAA2D,MAAA,KAAAC,UAAA,KAOhBhB,GACF,GAAG,KAGDlC,EAAAA,EAAAA,MAAA,WAASO,UAAU,OAAML,SAAA,EACjB,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOsB,SAASb,EAAAA,EAAAA,KAACgD,EAAK,CAACzD,MAAOA,KAC/BM,EAAAA,EAAAA,MAAA,OAAKO,UAAU,OAAML,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJF,EAAAA,EAAAA,MAAA,MAAIO,UAAU,aAAYL,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAMH,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASH,SAAC,kBAGvBC,EAAAA,EAAAA,KAACiD,EAAAA,SAAQ,CAACC,UAAUlD,EAAAA,EAAAA,KAACmD,EAAAA,EAAM,IAAIpD,UAC7BC,EAAAA,EAAAA,KAACoD,EAAAA,GAAM,WAKjB,C,4EChCMC,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,QAAS,CACPC,OAAQ,CACNC,cACE,iOAIFC,EAAS,CACbC,SAAU,iBAAM,oBAAoB,EACpCC,OAAQ,SAAA3E,GAAA,IAAG4E,EAAK5E,EAAL4E,MAAK,4BAAAvD,OAAwCuD,EAAK,EAC7DC,QAAS,SAAAC,GAAA,IAAGtB,EAAQsB,EAARtB,SAAQ,eAAAnC,OAA2BmC,EAAQ,EACvDuB,QAAS,SAAAC,GAAA,IAAGxB,EAAQwB,EAARxB,SAAQ,eAAAnC,OAA2BmC,EAAQ,aACvDyB,QAAS,SAAAC,GAAA,IAAG1B,EAAQ0B,EAAR1B,SAAQ,eAAAnC,OAA2BmC,EAAQ,cAEnDF,EAAK,eAAA6B,GAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EACZoC,GAAe,OAAAtC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAkC,OAAA,SAERnB,EAAIO,EAAOW,EAAK7B,MAAM6B,IAAOE,MAAK,SAACC,GAAC,OAAKA,EAAEH,IAAI,KAAC,wBAAAjC,EAAAO,OAAA,GAAAV,EAAA,KACxD,gBAJUwC,GAAA,OAAAL,EAAAxB,MAAA,KAAAC,UAAA,I","sources":["components/movie-details/MovieDetails.tsx","pages/InfoMoviePage.tsx","services/index.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { FaCaretLeft } from 'react-icons/fa/index';\nimport type { MovieData } from '@types';\n\nconst Movie = ({ movie }: { movie: MovieData }) => {\n  const location = useRef(useLocation().state?.from ?? '/goit-react-hw-05-movies');\n\n  const fullPathPoster = (poster: string): string =>\n    poster\n      ? `https://image.tmdb.org/t/p/w260_and_h390_face${poster}`\n      : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      <Link to={location.current}>\n        <button className='flex items-center justify-center gap-1 rounded border-[1px] border-black bg-black fill-white px-[8px] py-[4px] text-white hover:fill-[#c1c1c1] hover:text-[#c1c1c1]'>\n          <FaCaretLeft className='h-[24px] w-[24px]' />\n          <b>Go back</b>\n        </button>\n      </Link>\n      <div className='mt-4 flex gap-5'>\n        <img\n          src={fullPathPoster(movie.poster_path)}\n          alt={movie.original_title}\n          width={260}\n          height={390}\n        />\n        <div className='flex flex-col gap-4'>\n          <h1>\n            <b className='text-[40px]'>{movie.title}</b>\n          </h1>\n          <span>User score: {Math.round(movie.vote_average * 10)}%</span>\n          <h2>\n            <b>Overviews</b>\n          </h2>\n          <span>{movie.overview}</span>\n          <h3>\n            <b>Genres</b>\n          </h3>\n          <span>{movie.genres.map((genre) => genre.name).join(', ')}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Movie;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport Loader from '../components/loader/Loader';\nimport Movie from '../components/movie-details/MovieDetails';\nimport type { MovieData } from '@types';\nimport { fetch } from 'src/services';\n\nconst MoviePage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({} as MovieData);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const result = await fetch({\n        type: 'details',\n        movie_id: movieId,\n      });\n      setMovie(result as MovieData);\n    };\n    fetchMovie();\n  }, []);\n\n  return (\n    <section className='mt-2'>\n      {movie?.title && <Movie movie={movie} />}\n      <div className='mt-2'>\n        <h3>Additional information</h3>\n        <ul className='flex gap-4'>\n          <li>\n            <Link to='cast'>Cast</Link>\n          </li>\n          <li>\n            <Link to='reviews'>Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </section>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\nimport type {\n  FetchTMDB,\n  MergeReviewsData,\n  MergeSearchMoviesData,\n  MergeTrendingData,\n  MovieData,\n  CastData,\n} from '@types';\nconst ins = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    common: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Yzk5YTFkNDk2NTg1YmM2MmUwOTE1MDU5MzM1N2U2YyIsInN1YiI6IjY1MDliZDY1ZmEyN2Y0MDBjYWE1YWZjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WV0FmxQBPlefUu-pNpyZjtL2hGpndkjU9O_F-hxAuRY',\n    },\n  },\n});\nconst routes = {\n  trending: () => 'trending/movie/day',\n  search: ({ query }: FetchTMDB) => `search/movie?query=${query}`,\n  details: ({ movie_id }: FetchTMDB) => `movie/${movie_id}`,\n  credits: ({ movie_id }: FetchTMDB) => `movie/${movie_id}/credits`,\n  reviews: ({ movie_id }: FetchTMDB) => `movie/${movie_id}/reviews`,\n};\nconst fetch = async (\n  data: FetchTMDB\n): Promise<MergeTrendingData | MergeSearchMoviesData | MovieData | MergeReviewsData | CastData> => {\n  return ins(routes[data.type](data)).then((r) => r.data);\n};\nexport { fetch };\n"],"names":["_ref","_useLocation$state$fr","_useLocation$state","poster","movie","location","useRef","useLocation","state","from","_jsxs","_Fragment","children","_jsx","Link","to","current","className","FaCaretLeft","src","poster_path","concat","alt","original_title","width","height","title","Math","round","vote_average","overview","genres","map","genre","name","join","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","useEffect","fetchMovie","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","fetch","type","movie_id","sent","stop","apply","arguments","Movie","Suspense","fallback","Loader","Outlet","ins","axios","create","baseURL","headers","common","Authorization","routes","trending","search","query","details","_ref2","credits","_ref3","reviews","_ref4","_ref5","data","abrupt","then","r","_x"],"sourceRoot":""}