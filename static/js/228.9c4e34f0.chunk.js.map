{"version":3,"file":"static/js/228.9c4e34f0.chunk.js","mappings":"oKAoBA,IAjBmB,SAAHA,GAAwE,IAAlEC,EAAMD,EAANC,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAOK,KAAI,SAACC,GACX,OACEH,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,kCAAAC,OAAoCH,EAAMI,IAAMC,MAAO,CAAEC,KAAMX,GAAWG,SAC/EE,EAAMO,SAFFP,EAAMI,GAMnB,KAGN,C,qICWA,EA1Be,SAAHX,GAA6D,IAAvDe,EAAQf,EAARe,SAChBC,GAA4BC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAKxB,OACEd,EAAAA,EAAAA,KAAA,QAAMkB,UAAU,gBAAgBP,SALb,SAACQ,GACpBA,EAAEC,iBACFT,EAASK,EACX,EAEyDf,UACrDoB,EAAAA,EAAAA,MAAA,SAAOH,UAAU,sBAAqBjB,SAAA,EACpCD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,oBACHoB,EAAAA,EAAAA,MAAA,OAAKH,UAAU,8BAA6BjB,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,SACEkB,UAAU,gDACVI,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACL,GAAC,OAAKF,EAAUE,EAAEM,OAAOF,MAAM,KAE5CvB,EAAAA,EAAAA,KAAA,UAAQkB,UAAU,yCAAwCjB,UACxDD,EAAAA,EAAAA,KAAC0B,EAAAA,IAAQ,CAACC,KAAK,QAAQT,UAAU,4DAM7C,E,kBCaA,EAjCmB,WACjB,IAAAN,GAA4BC,EAAAA,EAAAA,UAAgC,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1Df,EAAMiB,EAAA,GAAEc,EAASd,EAAA,GACxBe,GAAgChB,EAAAA,EAAAA,WAAkB,GAAMiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAjDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAApB,EAAAA,EAAAA,GAAAkB,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACR,IAAMf,EAAQa,EAAaG,IAAI,SAC/B,GAAKhB,EAAL,CACA,IAAMiB,EAAW,eAAA5C,GAAA6C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAa,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACfC,EAAAA,EAAAA,GAAM,CAAE9B,KAAM,SAAUuB,MAAAA,IAAS,KAAD,EAAjDC,EAAQG,EAAAI,MACNN,EAAYD,EAAZC,SACKO,OACR1B,EAAUmB,GADMf,GAAY,GACT,wBAAAiB,EAAAM,OAAA,GAAAX,EAAA,KACzB,gBALgBY,GAAA,OAAA5D,EAAA6D,MAAA,KAAAC,UAAA,KAMjBlB,EAAYjB,EAPM,CAQpB,GAAG,CAACa,IASJ,OACEf,EAAAA,EAAAA,MAAA,OAAKH,UAAU,sBAAqBjB,SAAA,EAClCD,EAAAA,EAAAA,KAAC2D,EAAM,CAAChD,SATK,SAACY,GACEc,EAAJ,KAAVd,EAA8B,UAADjB,OAAWiB,GACvB,IACrBK,EAAU,MACVI,GAAY,EACd,IAKKD,IAAY/B,EAAAA,EAAAA,KAAA,QAAAC,SAAM,sBAClBJ,IAAUG,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAAC/D,OAAQA,MAGrC,C,4EC7BMgE,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,QAAS,CACPC,OAAQ,CACNC,cACE,iOAIFC,EAAS,CACbC,SAAU,iBAAM,oBAAoB,EACpCrD,OAAQ,SAAApB,GAAA,IAAGiD,EAAKjD,EAALiD,MAAK,4BAAAvC,OAAwCuC,EAAK,EAC7DyB,QAAS,SAAAC,GAAA,IAAGC,EAAQD,EAARC,SAAQ,eAAAlE,OAA2BkE,EAAQ,EACvDC,QAAS,SAAAC,GAAA,IAAGF,EAAQE,EAARF,SAAQ,eAAAlE,OAA2BkE,EAAQ,aACvDG,QAAS,SAAAC,GAAA,IAAGJ,EAAQI,EAARJ,SAAQ,eAAAlE,OAA2BkE,EAAQ,cAEnDpB,EAAK,eAAAyB,GAAApC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EACZkC,GAAe,OAAApC,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAA8B,OAAA,SAERlB,EAAIO,EAAOU,EAAKxD,MAAMwD,IAAOE,MAAK,SAACC,GAAC,OAAKA,EAAEH,IAAI,KAAC,wBAAA7B,EAAAM,OAAA,GAAAX,EAAA,KACxD,gBAJUY,GAAA,OAAAqB,EAAApB,MAAA,KAAAC,UAAA,I","sources":["components/movies-list/MoviesList.tsx","components/search/Search.tsx","pages/MoviesPage.tsx","services/index.ts"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport type { SearchMovies, TrendingDataResults } from '@types';\n\nconst MoviesList = ({ movies }: { movies: SearchMovies[] | TrendingDataResults[] }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map((movie) => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/goit-react-hw-05-movies/movie/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState, FormEvent } from 'react';\nimport { FaSearch } from 'react-icons/fa/index';\n\nconst Search = ({ onSubmit }: { onSubmit: (value: string) => void }) => {\n  const [search, setSearch] = useState<string>('');\n  const submitSearch = (e: FormEvent) => {\n    e.preventDefault();\n    onSubmit(search);\n  };\n  return (\n    <form className='max-w-[360px]' onSubmit={submitSearch}>\n      <label className='flex flex-col gap-2'>\n        <b>Search Movies:</b>\n        <div className='relative h-[36px] w-[360px]'>\n          <input\n            className='h-[36px] w-[360px] rounded pl-[40px] pr-[8px]'\n            type='text'\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <button className='absolute left-0 top-0 rounded bg-black'>\n            <FaSearch fill='white' className='h-[36px] w-[36px] p-[8px] hover:fill-[#c1c1c1]' />\n          </button>\n        </div>\n      </label>\n    </form>\n  );\n};\n\nexport default Search;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Search from '../components/search/Search';\nimport type { MergeSearchMoviesData, SearchMovies } from '@types';\nimport { fetch } from '../services';\nimport MoviesList from '../components/movies-list/MoviesList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState<SearchMovies[] | null>(null);\n  const [notFound, setNotFound] = useState<boolean>(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const value = searchParams.get('title');\n    if (!value) return;\n    const fetchMovies = async (query: string) => {\n      const response = await fetch({ type: 'search', query });\n      const { results } = response as MergeSearchMoviesData;\n      if (!results.length) setNotFound(true);\n      else setMovies(results);\n    };\n    fetchMovies(value);\n  }, [searchParams]);\n\n  const onSubmit = (value: string) => {\n    if (value !== '') setSearchParams(`?title=${value}`);\n    else setSearchParams('');\n    setMovies(null);\n    setNotFound(false);\n  };\n\n  return (\n    <div className='flex flex-col gap-3'>\n      <Search onSubmit={onSubmit} />\n      {notFound && <span>Not Found movies!</span>}\n      {movies && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nimport type {\n  FetchTMDB,\n  MergeReviewsData,\n  MergeSearchMoviesData,\n  MergeTrendingData,\n  MovieData,\n  CastData,\n} from '@types';\nconst ins = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    common: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Yzk5YTFkNDk2NTg1YmM2MmUwOTE1MDU5MzM1N2U2YyIsInN1YiI6IjY1MDliZDY1ZmEyN2Y0MDBjYWE1YWZjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WV0FmxQBPlefUu-pNpyZjtL2hGpndkjU9O_F-hxAuRY',\n    },\n  },\n});\nconst routes = {\n  trending: () => 'trending/movie/day',\n  search: ({ query }: FetchTMDB) => `search/movie?query=${query}`,\n  details: ({ movie_id }: FetchTMDB) => `movie/${movie_id}`,\n  credits: ({ movie_id }: FetchTMDB) => `movie/${movie_id}/credits`,\n  reviews: ({ movie_id }: FetchTMDB) => `movie/${movie_id}/reviews`,\n};\nconst fetch = async (\n  data: FetchTMDB\n): Promise<MergeTrendingData | MergeSearchMoviesData | MovieData | MergeReviewsData | CastData> => {\n  return ins(routes[data.type](data)).then((r) => r.data);\n};\nexport { fetch };\n"],"names":["_ref","movies","location","useLocation","_jsx","children","map","movie","Link","to","concat","id","state","from","title","onSubmit","_useState","useState","_useState2","_slicedToArray","search","setSearch","className","e","preventDefault","_jsxs","type","value","onChange","target","FaSearch","fill","setMovies","_useState3","_useState4","notFound","setNotFound","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","fetchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","response","results","wrap","_context","prev","next","fetch","sent","length","stop","_x","apply","arguments","Search","MoviesList","ins","axios","create","baseURL","headers","common","Authorization","routes","trending","details","_ref2","movie_id","credits","_ref3","reviews","_ref4","_ref5","data","abrupt","then","r"],"sourceRoot":""}