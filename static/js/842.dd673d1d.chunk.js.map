{"version":3,"file":"static/js/842.dd673d1d.chunk.js","mappings":"4OAcA,EAXiB,SAAHA,GAAyD,IAAnDC,EAAQD,EAARC,SACZC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,SAAAC,OAAWP,EAASQ,IAAMC,MAAO,CAAEC,KAAMT,GAAWG,SACzDJ,EAASW,SAIlB,ECOA,EAhBa,SAAHZ,GAAmD,IAA7CC,EAAQD,EAARC,SACd,OACEY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAT,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,KAAGW,UAAU,cAAaV,SAAC,uBAE7BD,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,GACCA,EAASe,KAAI,SAACC,GACZ,OAAOb,EAAAA,EAAAA,KAACc,EAAQ,CAAgBjB,SAAUgB,GAApBA,EAAMR,GAC9B,QAIV,ECDA,EAXiB,WACf,IAAAU,GAAgCC,EAAAA,EAAAA,UAAS,MAAsBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDlB,EAAQoB,EAAA,GAAEE,EAAWF,EAAA,GAO5B,OANAG,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAM,CAAEC,KAAM,aAAcC,MAAK,SAACC,GAChC,IAAQC,EAAYD,EAAZC,QACRN,EAAYM,EACd,GACF,GAAG,KACIzB,EAAAA,EAAAA,KAAC0B,EAAI,CAAC7B,SAAUA,GACzB,C,4ECLM8B,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,QAAS,CACPC,OAAQ,CACNC,cACE,iOAIFC,EAAS,CACbrC,SAAU,iBAAM,oBAAoB,EACpCsC,OAAQ,SAAAvC,GAAA,IAAGwC,EAAKxC,EAALwC,MAAK,4BAAAhC,OAAwCgC,EAAK,EAC7DC,QAAS,SAAAC,GAAA,IAAGC,EAAQD,EAARC,SAAQ,eAAAnC,OAA2BmC,EAAQ,EACvDC,QAAS,SAAAC,GAAA,IAAGF,EAAQE,EAARF,SAAQ,eAAAnC,OAA2BmC,EAAQ,aACvDG,QAAS,SAAAC,GAAA,IAAGJ,EAAQI,EAARJ,SAAQ,eAAAnC,OAA2BmC,EAAQ,cAEnDlB,EAAK,eAAAuB,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EACZxB,GAAe,OAAAsB,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAER1B,EAAIO,EAAOV,EAAKF,MAAME,IAAOD,MAAK,SAAC+B,GAAC,OAAKA,EAAE9B,IAAI,KAAC,wBAAA0B,EAAAK,OAAA,GAAAP,EAAA,KACxD,gBAJUQ,GAAA,OAAAZ,EAAAa,MAAA,KAAAC,UAAA,I","sources":["components/trending/Trending.tsx","components/home/Home.tsx","pages/HomePage.tsx","services/index.ts"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport type { TrendingDataResults } from '@types';\n\nconst Trending = ({ trending }: { trending: TrendingDataResults }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link to={`movie/${trending.id}`} state={{ from: location }}>\n        {trending.title}\n      </Link>\n    </li>\n  );\n};\n\nexport default Trending;\n","import type { TrendingState } from '@types';\nimport Trending from '../trending/Trending';\n\nconst Home = ({ trending }: { trending: TrendingState }) => {\n  return (\n    <>\n      <h1>\n        <b className='text-[32px]'>Trending today:</b>\n      </h1>\n      <ul>\n        {trending &&\n          trending.map((trend) => {\n            return <Trending key={trend.id} trending={trend} />;\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\nimport { fetch } from 'src/services';\nimport type { MergeTrendingData, TrendingState } from '@types';\nimport Home from '../components/home/Home';\n\nconst HomePage = () => {\n  const [trending, setTrending] = useState(null as TrendingState);\n  useEffect(() => {\n    fetch({ type: 'trending' }).then((data) => {\n      const { results } = data as MergeTrendingData;\n      setTrending(results);\n    });\n  }, []);\n  return <Home trending={trending} />;\n};\n\nexport default HomePage;\n","import axios from 'axios';\nimport type {\n  FetchTMDB,\n  MergeReviewsData,\n  MergeSearchMoviesData,\n  MergeTrendingData,\n  MovieData,\n  CastData,\n} from '@types';\nconst ins = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    common: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2Yzk5YTFkNDk2NTg1YmM2MmUwOTE1MDU5MzM1N2U2YyIsInN1YiI6IjY1MDliZDY1ZmEyN2Y0MDBjYWE1YWZjMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WV0FmxQBPlefUu-pNpyZjtL2hGpndkjU9O_F-hxAuRY',\n    },\n  },\n});\nconst routes = {\n  trending: () => 'trending/movie/day',\n  search: ({ query }: FetchTMDB) => `search/movie?query=${query}`,\n  details: ({ movie_id }: FetchTMDB) => `movie/${movie_id}`,\n  credits: ({ movie_id }: FetchTMDB) => `movie/${movie_id}/credits`,\n  reviews: ({ movie_id }: FetchTMDB) => `movie/${movie_id}/reviews`,\n};\nconst fetch = async (\n  data: FetchTMDB\n): Promise<MergeTrendingData | MergeSearchMoviesData | MovieData | MergeReviewsData | CastData> => {\n  return ins(routes[data.type](data)).then((r) => r.data);\n};\nexport { fetch };\n"],"names":["_ref","trending","location","useLocation","_jsx","children","Link","to","concat","id","state","from","title","_jsxs","_Fragment","className","map","trend","Trending","_useState","useState","_useState2","_slicedToArray","setTrending","useEffect","fetch","type","then","data","results","Home","ins","axios","create","baseURL","headers","common","Authorization","routes","search","query","details","_ref2","movie_id","credits","_ref3","reviews","_ref4","_ref5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","r","stop","_x","apply","arguments"],"sourceRoot":""}